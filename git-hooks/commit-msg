#!/bin/bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

echo "hook commit-msg:"
echo "1 = $1"
echo "2 = $2"
echo "3 = $3"
echo "4 = $4"

COMMIT_MESSAGE=$1

echo "Commit message: "
message_ok=true
while IFS= read -r line
do
	if [ -z "$line" ]; then
		continue
	fi
	if [[ $line =~ ^\#.* ]]; then
		break
	fi
	if [[ ! $line =~ ^[A-Z].* ]]; then
		message_ok=false
	fi
	if [[ $line =~ [.]$ ]]; then
		message_ok=false
	fi
	echo "$line"
done < "$COMMIT_MESSAGE"
echo "------------------------------------"

if [ "$message_ok" = false ] ; then
	echo "Bad commit message"
	exit 1
fi
