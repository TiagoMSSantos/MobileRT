name: Docker

on:
  workflow_dispatch:
  push:
    paths-ignore:
    - '*'
    - '.github/**'
    - 'app/debug/**'
    - 'app/release/**'
    - 'app/third_party/conan/**'
    - 'app/System_dependent/**'
    - 'docs/**'
    - 'scripts/**'
    - 'WavefrontOBJs/**'
    - '!.github/workflows/docker.yml'
    - '!app/third_party/conan/Native/**'
    - '!app/System_dependent/CMakeLists.txt'
    - '!app/System_dependent/Android_JNI/**'
    - '!deploy/**'
    - '!scripts/install_dependencies.sh'
    - '!scripts/run_tests.sh'
    - '!scripts/helper_functions.sh'
    - '!scripts/docker.sh'
    - '!*gradle*'

defaults:
  run:
    shell: sh
    working-directory: .

concurrency:
  group: ${{ github.workflow }} ${{ github.ref }}
  cancel-in-progress: true

# Default environment variables.
env:
  GITHUB_STEP_TIMEOUT_SMALL: 4
  GITHUB_STEP_TIMEOUT_MEDIUM: 10
  GITHUB_STEP_TIMEOUT_LONG: 30
  GITHUB_STEP_TIMEOUT_VERY_LONG: 60

jobs:
  Build:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          BASE_IMAGE: ubuntu:22.04
        - os: ubuntu-latest
          BASE_IMAGE: tgagor/centos:stream
        - os: ubuntu-latest
          BASE_IMAGE: archlinux/archlinux:base-devel
        - os: ubuntu-latest
          BASE_IMAGE: alpine:3.17
        - os: ubuntu-latest
          BASE_IMAGE: gentoo/stage3:latest
        - os: ubuntu-latest
          BASE_IMAGE: sickcodes/docker-osx:latest

    runs-on: ${{ matrix.os }}
    # Necessary timeout of +/- 300 min to be able to build MobileRT with gentoo,
    # That's why we try to pull a previously available version and update it with a new layer instead.
    timeout-minutes: 300

    steps:
    - name: Checkout
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success()
      uses: actions/checkout@v3

    - name: Add branch name and version to environment variables
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      shell: bash
      env:
        BASE_IMAGE: ${{ matrix.BASE_IMAGE }}
      run: |
        export BRANCH=${GITHUB_REF#refs/heads/};
        echo "BRANCH: ${BRANCH}";
        echo "BRANCH=${BRANCH}" >> "${GITHUB_ENV}";
        export VERSION="${BASE_IMAGE/\//-}";
        export VERSION="${VERSION/:/-}";
        echo "VERSION=${VERSION}" >> "${GITHUB_ENV}";

    - name: Install docker MacOS
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success() && startsWith(matrix.os, 'macos')
      env:
        BASE_IMAGE: ${{ matrix.BASE_IMAGE }}
      run: |
        # shellcheck disable=SC1091
        . scripts/docker.sh && installDockerCommandForMacOS;
        # Add docker path to PATH environment variable to all workflow steps.
        export PATH=${PATH}:"/usr/local/etc/bash_completion.d/";
        export PATH=${PATH}:"/Applications/Docker.app/";
        echo "${PATH}" >> "${GITHUB_PATH}";

    - name: Login to DockerHub Registry
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      run: |
        # shellcheck disable=SC1091
        . scripts/docker.sh && \
          checkAvailableVersion && \
          loginDockerHub ${{ secrets.DOCKERHUB_USERNAME }} ${{ secrets.DOCKERHUB_PASSWORD }};
        echo 'BUILD_IMAGE=yes' >> "${GITHUB_ENV}";

    - name: Pull the tagged Docker image
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success() && startsWith(matrix.BASE_IMAGE, 'gentoo')
      run: |
        # shellcheck disable=SC1091
        echo "VERSION: ${{ env.VERSION }}";
        . scripts/docker.sh && pullDockerImage ${{ env.VERSION }};
        echo "BUILD_IMAGE=${BUILD_IMAGE}" >> "${GITHUB_ENV}";

    - name: Build the tagged Docker image
      timeout-minutes: 300
      if: success() && env.BUILD_IMAGE == 'yes'
      run: |
        # shellcheck disable=SC1091
        echo "BASE_IMAGE: ${{ matrix.BASE_IMAGE }}";
        echo "BRANCH: ${{ env.BRANCH }}";
        echo "VERSION: ${{ env.VERSION }}";
        . scripts/docker.sh && \
          buildDockerImage ${{ matrix.BASE_IMAGE }} ${{ env.BRANCH }} ${{ env.VERSION }};

    - name: Pull and build MobileRT
      timeout-minutes: 300
      if: success() && env.BUILD_IMAGE != 'yes'
      run: |
        # shellcheck disable=SC1091
        echo "VERSION: ${{ env.VERSION }}";
        . scripts/docker.sh && \
          compileMobileRTInDockerContainer ${{ env.VERSION }};

    - name: Update and commit MobileRT Docker image
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success() && env.BUILD_IMAGE != 'yes'
      run: |
        # shellcheck disable=SC1091
        echo "VERSION: ${{ env.VERSION }}";
        . scripts/docker.sh && commitMobileRTDockerImage ${{ env.VERSION }};

    - name: Squash Docker image
      timeout-minutes: 120
      if: success() && env.BRANCH == 'master' && startsWith(matrix.BASE_IMAGE, 'gentoo')
      run: |
        # shellcheck disable=SC1091
        echo "VERSION: ${{ env.VERSION }}";
        . scripts/docker.sh && squashMobileRTDockerImage ${{ env.VERSION }};

    - name: Run the unit tests
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      run: |
        # shellcheck disable=SC1091
        echo "VERSION: ${{ env.VERSION }}";
        . scripts/docker.sh && executeUnitTestsInDockerContainer ${{ env.VERSION }};

    - name: Push the tagged Docker image
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_LONG) }}
      if: success() && env.BRANCH == 'master'
      run: |
        # shellcheck disable=SC1091
        echo "VERSION: ${{ env.VERSION }}";
        . scripts/docker.sh && pushMobileRTDockerImage ${{ env.VERSION }};
