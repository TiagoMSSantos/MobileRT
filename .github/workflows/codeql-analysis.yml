name: CodeQL

# cron:  'a b c d e'
# a: minute (0 - 59)
# b: hour (0 - 23)
# c: day of the month (1 - 31)
# d: month (1 - 12 or JAN-DEC)
# e: day of the week (0 - 6 or SUN-SAT)

on:
  workflow_dispatch:
  push:
    paths-ignore:
    - '.github/workflows/**'
    - '!.github/workflows/codeql-analysis.yml'
    branches:
    - '*'

defaults:
  run:
    shell: bash
    working-directory: .

concurrency:
  group: ${{ github.workflow }} ${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build:
    name: Analyze
    runs-on: ubuntu-18.04

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp', 'java']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 0

    - name: Set up JDK
      if: success()
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'

    # Initializes the CodeQL tools for scanning.
    # Valid inputs are ['tools', 'languages', 'token', 'matrix', 'config-file', 'queries']
    # Queries: must be a built-in suite (security-extended or security-and-quality),
    # a relative path, or be of the form "owner/repo[/path]@ref"
    # Unable to download and extract the tools needed for installing the python dependecies.
    # You can call this action with 'setup-python-dependencies: false' to disable this process.
    - name: Initialize CodeQL
      if: success()
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        queries: +security-and-quality
        token: ${{ github.token }}
        matrix: ${{ toJson(matrix) }}
        config-file: ./.github/codeql/codeql-config.yml

    - name: Install dependencies
      if: success()
      working-directory: .
      run: |
        set -euo pipefail;
        bash scripts/install_dependencies.sh;

    - name: Setup gradlew
      if: success() && matrix.language == 'java'
      working-directory: .
      run: |
        chmod +x ./gradlew;

    - name: Build Gradle
      if: success() && matrix.language == 'java'
      working-directory: .
      run: |
        mkdir -p ./app/build/reports;
        mkdir -p ./reports;
        bash ./scripts/compile_android.sh -t debug -r yes -n 21.3.6528147 -m 3.6.0 2>&1 | tee ./reports/compile_android.log;
        export res="${PIPESTATUS[0]}";
        echo "Result: '${res}'";
        exit ${res};

    - name: Build C++
      if: success() && matrix.language == 'cpp'
      working-directory: .
      run: |
        mkdir -p ./reports;
        bash scripts/compile_native.sh -t debug -c g++ -r yes 2>&1 | tee ./reports/compile_native.log;
        export res="${PIPESTATUS[0]}";
        echo "Result: '${res}'";
        exit ${res};

    - name: Remove unnecessary code
      if: success() && matrix.language == 'cpp'
      working-directory: .
      run: |
        rm -rf ./app/third_party/*;

    # Warning: Valid inputs are ['check_name', 'output', 'upload', 'ram',
    # 'add-snippets', 'threads', 'checkout_path', 'token', 'matrix']
    - name: Perform CodeQL Analysis
      if: success()
      uses: github/codeql-action/analyze@v1
      with:
        output: ../results
        upload: true
        add-snippets: true
        threads: 2
        checkout_path: ${{ github.workspace }}
        token: ${{ github.token }}
        matrix: ${{ toJson(matrix) }}
        upload-database: true
