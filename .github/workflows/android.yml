name: Tests Android

on: [push, pull_request, release]

jobs:
  Build:
    name: Debug & Release
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Prepare Environment
      if: success()
      run: chmod +x ./gradlew

    - name: Set up JDK 1.8
      if: success()
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Gradle
      if: success()
      run: ./gradlew build -Dorg.gradle.logging.level=quiet -Dorg.gradle.parallel=true -Dorg.gradle.parallel.threads=4 -Dorg.gradle.daemon=true -Dorg.gradle.configureondemand=true -Dorg.gradle.caching=true -Dandroid.enableBuildCache=true --quiet

    - name: Build Debug APK
      if: success()
      run: ./gradlew assembleDebug -Dorg.gradle.logging.level=info -Dorg.gradle.parallel=true

    - name: Build Release APK
      if: success()
      run: ./gradlew assembleRelease -Dorg.gradle.logging.level=info -Dorg.gradle.parallel=true

    - name: Upload Debug APK as artifact
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: MobileRT_debug_exp
        path: ./app/build/outputs/apk/debug

    - name: Upload Release APK as artifact
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: MobileRT_release_exp
        path: ./app/build/outputs/apk/release

    - name: Sign Android debug
      if: success()
      uses: r0adkll/sign-android-release@v1.0.1
      with:
        releaseDirectory: ./app/build/outputs/apk/debug
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.SIGNING_KEY }}
        keyPassword: ${{ secrets.SIGNING_KEY }}

    - name: Sign Android release
      if: success()
      uses: r0adkll/sign-android-release@v1.0.1
      with:
        releaseDirectory: ./app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.SIGNING_KEY }}
        keyPassword: ${{ secrets.SIGNING_KEY }}

    - name: Run Unit Tests Debug
      if: success()
      run: ./gradlew testDebugUnitTest -Dorg.gradle.logging.level=info -Dorg.gradle.parallel=true

    - name: Run Unit Tests Release
      if: success()
      run: ./gradlew testReleaseUnitTest -Dorg.gradle.logging.level=info -Dorg.gradle.parallel=true

    - name: Run Instrumented Tests Debug in Emulator
      if: success()
      uses: ReactiveCircus/android-emulator-runner@v2
      with:
        api-level: 16
        script: ./gradlew connectedAndroidTest -Dorg.gradle.logging.level=info -Dorg.gradle.parallel=true > ./app/build/reports/log_tests.txt;
                adb logcat -v threadtime -d *:V > ./app/build/reports/logcat.txt;
                cat ./app/build/reports/logcat.txt | egrep -i "proc.*:puscas" > ./app/build/reports/pid1.txt;
                cat ./app/build/reports/logcat.txt | egrep -i "proc.*:puscas" | cut -d ":" -f 4 > ./app/build/reports/pid2.txt;

#                adb logcat -v threadtime -d *:V | grep `adb shell ps | egrep -i ".*puscas.*" | cut -c10-15` > ./app/build/reports/logcat2.txt;
#                cat ./app/build/reports/logcat.txt | egrep -i "proc.*:puscas" | cut -d " " -f 11 | cut -d ":" -f 1 > ./app/build/reports/pid3.txt;
#                cat ./app/build/reports/logcat.txt | egrep -i "proc.*:puscas" | cut -d ":" -f 4 | cut -d " " -f 4 > ./app/build/reports/pid4.txt;
#                cat ./app/build/reports/logcat.txt | grep -i `cat ./app/build/reports/logcat.txt | egrep -i "proc.*:puscas" | cut -d ":" -f 4 | cut -d " " -f 4` > ./app/build/reports/log_app.txt

    - name: Upload reports
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: reports
        path: ./app/build/reports
