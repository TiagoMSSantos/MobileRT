name: Tests Android

on: [push, pull_request, release]

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release]
        os: [ubuntu-16.04, macos-10.15, windows-2019]
        include:
          - os: ubuntu-16.04
            ndk_version: 21.2.6472646
            cmake_version: 3.6.0

          - os: macos-10.15
            ndk_version: 18.1.5063045
            cmake_version: 3.6.0

          - os: windows-2019
            ndk_version: 21.2.6472646
            cmake_version: 3.6.0

          - type: Debug
            variant: debug

          - type: Release
            variant: release

    name: ${{ matrix.type }} (${{ matrix.os }}])
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v2.2.0

    - name: Setup Java JDK
      if: success()
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 1.8

    - name: Setup gradlew
      if: success()
      run: |
        chmod +x ./gradlew;

    - name: Setup reports
      if: success()
      run: |
        mkdir -p ./app/build/reports;

    - name: Build ${{ matrix.type }}
      if: success()
      run: |
        bash ./scripts/compile_android.sh ${{ matrix.type }} ${{ matrix.ndk_version }} ${{ matrix.cmake_version }};

    - name: Sign APK
      if: success()
      uses: r0adkll/sign-android-release@v1.0.1
      with:
        releaseDirectory: ./app/build/outputs/apk/${{ matrix.variant }}
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.SIGNING_KEY }}
        keyPassword: ${{ secrets.SIGNING_KEY }}

    - name: Run unit tests Java
      if: success()
      run: |
        bash ./scripts/run_tests.sh ${{ matrix.type }} ${{ matrix.ndk_version }} ${{ matrix.cmake_version }};

    - name: Run Android tests
      if: success() && !startsWith(matrix.os, 'windows')
      uses: ReactiveCircus/android-emulator-runner@v2.9.0
      with:
        api-level: 16
        target: default
        arch: x86
        disable-animations: true
        script: |
          bash ./scripts/run_tests_android.sh ${{ matrix.variant }} all ${{ matrix.ndk_version }} ${{ matrix.cmake_version }} false;

    - name: Run linter
      if: success()
      run: |
        bash ./scripts/check_android.sh ${{ matrix.type }} ${{ matrix.ndk_version }} ${{ matrix.cmake_version }};

    - name: Upload reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: reports_${{ matrix.type }}_${{ matrix.os }}
        path: ./app/build/reports

    - name: Upload APK
      if: success() && matrix.os == 'ubuntu-16.04'
      uses: actions/upload-artifact@v2
      with:
        name: MobileRT_${{ matrix.type }}_exp
        path: ./app/build/outputs/apk/${{ matrix.variant }}
