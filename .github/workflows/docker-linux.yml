name: Docker Linux

on:
  push:
    paths-ignore:
    - '*'
    - '.github/**'
    - 'app/debug/**'
    - 'app/release/**'
    - 'app/System_dependent/**'
    - 'docs/**'
    - 'scripts/**'
    - 'WavefrontOBJs/**'
    - '!.github/workflows/docker-linux.yml'
    - '!app/System_dependent/CMakeLists.txt'
    - '!app/System_dependent/Android_JNI/**'
    - '!scripts/check_android.sh'
    - '!scripts/compile_android.sh'
    - '!scripts/run_tests.sh'
    - '!scripts/run_tests_android.sh'
    - '!codecov.yml'
    - '!*gradle*'

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  Build:
    runs-on: ubuntu-18.04
    timeout-minutes: 240
    strategy:
      fail-fast: false
      matrix:
        BASE_IMAGE: ["ubuntu:18.04", "centos:8", "archlinux/archlinux:base-devel", "alpine:3.12"]
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Login to DockerHub Registry
      if: success()
      run: echo ${{ env.DOCKERHUB_PASSWORD }} | docker login -u ${{ env.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build the tagged Docker image
      if: success()
      run: |
        VERSION=${BASE_IMAGE%:*};
        VERSION=${VERSION%/*};
        echo "Version: ${VERSION}";
        docker build -t ptpuscas/mobile_rt:${VERSION} -f docker_image/Dockerfile \
          --no-cache=false --build-arg BUILD_TYPE=Release --build-arg BASE_IMAGE=${{ matrix.BASE_IMAGE }} .;
      env:
        BASE_IMAGE: ${{ matrix.BASE_IMAGE }}

    - name: Run the unit tests
      if: success()
      run: docker run -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=${DISPLAY} ptpuscas/mobile_rt ./bin/UnitTests

    - name: Push the tagged Docker image
      if: success()
      run: |
        VERSION=${BASE_IMAGE%:*};
        VERSION=${VERSION%/*};
        echo "Version: ${VERSION}";
        docker push ptpuscas/mobile_rt:${VERSION}
      env:
        BASE_IMAGE: ${{ matrix.BASE_IMAGE }}
