name: Code Analysis

# cron:  'a b c d e'
# a: minute (0 - 59)
# b: hour (0 - 23)
# c: day of the month (1 - 31)
# d: month (1 - 12 or JAN-DEC)
# e: day of the week (0 - 6 or SUN-SAT)

on:
  workflow_dispatch:
  push:
    paths-ignore:
    - '*'
    - '.github/workflows/**'
    - 'docs/**'
    - '**/renovate.json'
    - '!gradle/wrapper/gradle-wrapper.properties'
    - '!.github/workflows/code-analysis.yml'
    - '!*gradle*'
    branches:
    - '*'

defaults:
  run:
    shell: sh
    working-directory: .

concurrency:
  group: ${{ github.workflow }} ${{ github.ref }}
  cancel-in-progress: true

# Default environment variables.
env:
  GITHUB_STEP_TIMEOUT_SMALL: 4
  GITHUB_STEP_TIMEOUT_MEDIUM: 10
  GITHUB_STEP_TIMEOUT_LONG: 30

jobs:
  Build:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift']
        language: ['cpp', 'java']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    name: Analyze ${{ matrix.language }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success()
      uses: actions/checkout@v3

    - name: Set up JDK
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success() && matrix.language == 'java'
      uses: actions/setup-java@v3
      with:
        # Check available parameters in: https://github.com/actions/setup-java/blob/main/action.yml
        java-version: 17
        distribution: zulu
        java-package: jdk
        architecture: x64
        check-latest: false
        server-id: github
        server-username: GITHUB_ACTOR
        server-password: GITHUB_TOKEN
        settings-path: ~/.gradle
        overwrite-settings: true
        gpg-private-key: ''
        gpg-passphrase: GPG_PASSPHRASE
        cache: gradle

    - name: Check available Android versions
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success() && matrix.language == 'java'
      working-directory: .
      run: |
        echo 'Available Android versions:';
        du -h -d 1 ${ANDROID_HOME}/ndk;
        du -h -d 1 ${ANDROID_HOME}/cmake;
        du -h -d 1 ${ANDROID_HOME}/build-tools;
        ls -lahp ${ANDROID_HOME}/platforms;
        ls -lahp ${HOME};
        echo "ANDROID_NDK_PATH=${ANDROID_HOME}/ndk/23.2.8568313" >> "${GITHUB_ENV}";

    # Initializes the CodeQL tools for scanning.
    # Valid inputs are ['tools', 'languages', 'token', 'matrix', 'config-file', 'queries']
    # Queries: must be a built-in suite (security-extended or security-and-quality),
    # a relative path, or be of the form "owner/repo[/path]@ref"
    # Unable to download and extract the tools needed for installing the python dependencies.
    # You can call this action with 'setup-python-dependencies: false' to disable this process.
    - name: Initialize CodeQL
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      uses: github/codeql-action/init@v2
      with:
        # Check available parameters in: https://github.com/github/codeql-action/blob/main/init/action.yml
        languages: ${{ matrix.language }}
        token: ${{ github.token }}
        matrix: ${{ toJson(matrix) }}
        config-file: .github/codeql/codeql-config.yml
        queries: +security-and-quality
        setup-python-dependencies: true
        source-root: .
        ram: 6144
        threads: 3
        debug: false
        packs: codeql/cpp-queries,codeql/java-queries,codeql/ruby-queries

    - name: Install dependencies
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_LONG) }}
      if: success() && matrix.language == 'cpp'
      working-directory: .
      run: |
        sh scripts/install_dependencies.sh;

    # Only execute shell unit tests for 'cpp' language because it doesn't matter in which build
    # these tests are executed.
    - name: Shell scripts unit tests
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success() && matrix.language == 'cpp'
      working-directory: .
      run: |
        sh scripts/test/helper_functions.sh;

    - name: Autobuild
      id: autobuild
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_LONG) }}
      if: success() && matrix.language != 'cpp'
      uses: github/codeql-action/autobuild@v2
      continue-on-error: true
      with:
        # Check available parameters in: https://github.com/github/codeql-action/blob/main/autobuild/action.yml
        token: ${{ github.token }}
        matrix: ${{ toJson(matrix) }}
        working-directory: ${{ github.workspace }}

    - name: Build C++
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success() && matrix.language == 'cpp'
      working-directory: .
      run: |
        sh scripts/compile_native.sh -t debug -c g++ -r yes;

    # Warning: Valid inputs are ['check_name', 'output', 'upload', 'ram',
    # 'add-snippets', 'threads', 'checkout_path', 'token', 'matrix']
    - name: Perform CodeQL Analysis
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success()
      uses: github/codeql-action/analyze@v2
      with:
        # Check available parameters in: https://github.com/github/codeql-action/blob/main/analyze/action.yml
        check_name: CodeQL
        output: ../results
        upload: never
        # Check cleanup-level in: https://codeql.github.com/docs/codeql-cli/manual/database-cleanup/
        cleanup-level: brutal
        # The amount of memory in MB that can be used by CodeQL for database finalization and query execution.
        ram: 6144
        add-snippets: true
        skip-queries: false
        threads: 3
        checkout_path: ${{ github.workspace }}
        # ref: ${GITHUB_REF} does not match /^refs\/(heads|pull|tags)\/.*$/.
        # sha: ${GITHUB_SHA} does not match /^[0-9a-fA-F]+$/.
        # category: String used by Code Scanning for matching the analyses. Not required.
        # category: CodeQL
        upload-database: true
        wait-for-processing: true
        token: ${{ github.token }}
        matrix: ${{ toJson(matrix) }}

    - name: Validate CodeQL output was generated
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      working-directory: .
      run: |
        ls -lahp ../results/;
        ls -lahp ../results/${{ matrix.language }}.sarif;
        cat ../results/${{ matrix.language }}.sarif;

    - name: Filter SARIF
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success()
      uses: advanced-security/filter-sarif@v1
      with:
        # Check available parameters in: https://github.com/advanced-security/filter-sarif/blob/main/action.yml
        patterns: |
          -**/*third_party*/**/*:**
        input: ../results/${{ matrix.language }}.sarif
        output: ../results/${{ matrix.language }}-filtered.sarif

    - name: Validate CodeQL output was generated
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      working-directory: .
      run: |
        ls -lahp ../results/;
        ls -lahp ../results/${{ matrix.language }}.sarif;
        ls -lahp ../results/${{ matrix.language }}-filtered.sarif;
        cat ../results/${{ matrix.language }}-filtered.sarif;

    - name: Upload SARIF
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      uses: github/codeql-action/upload-sarif@v2
      with:
        # Check available parameters in: https://github.com/github/codeql-action/blob/main/upload-sarif/action.yml
        sarif_file: ../results/${{ matrix.language }}-filtered.sarif
