name: R

on:
  workflow_dispatch:
  push:
    paths-ignore:
    - '**/**'
    - '!.github/workflows/android_repeatable.yml'

defaults:
  run:
    shell: sh
    working-directory: .

concurrency:
  group: ${{ github.workflow }} ${{ github.ref }}
  cancel-in-progress: true

# Default environment variables.
env:
  GITHUB_STEP_TIMEOUT_SMALL: 4
  GITHUB_STEP_TIMEOUT_MEDIUM: 10
  GITHUB_STEP_TIMEOUT_LONG: 30

jobs:
  Build:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        include:
        - test: RayTracingTest#testRenderSceneFromSDCardOBJ
          type: debug
          host_os: ubuntu-latest
          android_api: 16

    name: ${{ matrix.test }} [${{ matrix.type }} (${{ matrix.host_os }})]
    runs-on: ${{ matrix.host_os }}
    timeout-minutes: 30

    steps:
    - name: Checkout
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success()
      uses: actions/checkout@v4

    - name: Set up JDK
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      if: success()
      uses: actions/setup-java@v4
      with:
        # Check available parameters in: https://github.com/actions/setup-java/blob/main/action.yml
        java-version: 21
        distribution: zulu
        java-package: jdk
        architecture: x64
        check-latest: false
        server-id: github
        server-username: GITHUB_ACTOR
        server-password: GITHUB_TOKEN
        settings-path: ~/.gradle
        overwrite-settings: true
        gpg-private-key: ''
        gpg-passphrase: GPG_PASSPHRASE
        cache: gradle
        cache-dependency-path: '**/build.gradle'

    - name: Build ${{ matrix.type }}
      timeout-minutes: 20
      if: success()
      working-directory: .
      run: |
        sh scripts/compile_android.sh -t ${{ matrix.type }} -r yes -f "\"x86\"";

    - name: Enable KVM group permissions
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success() && startsWith(matrix.host_os, 'ubuntu')
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules;
        sudo udevadm control --reload-rules;
        sudo udevadm trigger --name-match=kvm;

    - name: Run Android tests
      timeout-minutes: 20
      if: success() && !startsWith(matrix.host_os, 'windows')
      uses: ReactiveCircus/android-emulator-runner@v2
      env:
        NCPU_CORES: 4
      with:
        # Check available parameters in: https://github.com/ReactiveCircus/android-emulator-runner/blob/main/action.yml
        api-level: ${{ matrix.android_api }}
        target: default
        arch: x86
        disable-animations: true
        disable-spellchecker: true
        channel: stable
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none -camera-front none
        cores: ${{ env.NCPU_CORES }}
        sdcard-path-or-size: 100M
        ram-size: 1024M
        script: |
          sh scripts/run_tests_android.sh -t ${{ matrix.type }} -r rep_puscas.mobilertapp.${{ matrix.test }} -k false -f "\"x86\"";

    - name: Upload reports as artifact
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      uses: actions/upload-artifact@v4.3.3
      with:
        # Check available parameters in: https://github.com/actions/upload-artifact/blob/main/action.yml
        name: reports_${{ matrix.type }}_${{ matrix.host_os }}-artifacts
        path: app/build/reports
        if-no-files-found: error
        retention-days: 90
