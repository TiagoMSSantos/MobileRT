name: R

on:
  workflow_dispatch:
  push:
    paths-ignore:
    - '**/**'
    - '!.github/workflows/android_repeatable.yml'

defaults:
  run:
    shell: bash
    working-directory: .

concurrency:
  group: ${{ github.workflow }} ${{ github.ref }}
  cancel-in-progress: true

# Default environment variables.
env:
  GITHUB_STEP_TIMEOUT_SMALL: 2
  GITHUB_STEP_TIMEOUT_MEDIUM: 6
  GITHUB_STEP_TIMEOUT_LONG: 20

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - test: UiTest#testClickRenderButtonManyTimesWithPreview
          type: debug
          os: macos-11
          ndk_version: 21.3.6528147
          cmake_version: 3.6.0
          android_api: 16

    name: ${{ matrix.test }} [${{ matrix.type }} (${{ matrix.os }})]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40

    steps:
    - name: Checkout
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_MEDIUM) }}
      uses: actions/checkout@v3

    - name: Set up JDK
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: success()
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'

    - name: Build ${{ matrix.type }}
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_LONG) }}
      if: success()
      working-directory: .
      run: |
        bash scripts/compile_android.sh -t ${{ matrix.type }} -r yes -n ${{ matrix.ndk_version }} -m ${{ matrix.cmake_version }};

    - name: Run Android tests
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_LONG) }}
      if: success() && !startsWith(matrix.os, 'windows')
      uses: ReactiveCircus/android-emulator-runner@v2
      env:
        NCPU_CORES: 4
      with:
        api-level: ${{ matrix.android_api }}
        target: default
        arch: x86
        disable-animations: true
        disable-spellchecker: true
        channel: stable
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none -camera-front none
        cores: ${NCPU_CORES}
        sdcard-path-or-size: 100M
        ram-size: 1024M
        script: |
          bash scripts/run_tests_android.sh -t ${{ matrix.type }} -r rep_puscas.mobilertapp.${{ matrix.test }} -n ${{ matrix.ndk_version }} -m ${{ matrix.cmake_version }} -k false;

    - name: Upload reports
      timeout-minutes: ${{ fromJSON(env.GITHUB_STEP_TIMEOUT_SMALL) }}
      if: always()
      uses: actions/upload-artifact@v3
      continue-on-error: true
      with:
        name: reports_${{ matrix.type }}_${{ matrix.os }}
        retention-days: 90
        if-no-files-found: error
        path: |
          ./app/build/reports
