///////////////////////////////////////////////////////////////////////////////
// Setup necessary imports
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Setup Gradle
///////////////////////////////////////////////////////////////////////////////
buildscript {

    // Setup necessary repositories to get third party dependencies
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        gradlePluginPortal()

        maven { url 'https://maven.google.com' }
        maven { url 'https://mvnrepository.com' }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        maven { url 'https://plugins.gradle.org/m2/'}
        maven { url 'https://jitpack.io' }
    }

    // This block encapsulates custom properties and makes them available to all
    // modules in the project.
    ext {
        // Before updating gradle, check which version of Android Studio is compatible with it and update README.
        // Allow to setup more recently versions of Gradle, but use 8.2.2 by default because it's compatible with Android 15.
        gradleVersion = System.getProperty('gradleVersion', '8.2.2')
        // The default minimum Android API version possible is 14 due to compatibility with Appcompat dependency.
        androidApiVersion = System.getProperty('androidApiVersion', '14')

        final def androidApiVersionArray = androidApiVersion.split("\\.").collect()
        final def androidApiVersionValue = androidApiVersionArray[0] as Float
        if (androidApiVersionValue >= 19) {
            common_libraries_android_framework = '1.13.1'
        } else {
            common_libraries_android_framework = '1.12.0'
        }

        kotlin_stdlib_jdk8_version = '1.9.24'
        androidX_annotation_version = '1.8.0'

        // Test dependencies
        jacoco_version = '0.8.12'

        // Android tests dependencies
        androidX_test_espresso_version = '3.5.1'

        // Unit tests dependencies
        powermock_version = '2.0.9'
    }

    dependencies {
        final def currentOS = System.getProperty("os.name")
        println("OS: " + currentOS)
        // Compatibility matrix: https://developer.android.com/build/releases/gradle-plugin#android_gradle_plugin_and_android_studio_compatibility
        classpath "com.android.tools.build:gradle:${gradleVersion}"
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:5.0.0.4638'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_stdlib_jdk8_version}"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.51.0'

        /* To confirm JaCoCo version run: $ sh gradlew buildEnvironment */
        /* Resolves issue of incorrect version use in one of jacoco/android plugin inner tasks */
        classpath "org.jacoco:org.jacoco.core:${jacoco_version}"
        classpath "org.jacoco:org.jacoco.report:${jacoco_version}"
        classpath "org.jacoco:org.jacoco.agent:${jacoco_version}"

        // classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.15.0'
        // classpath 'org.pitest:pitest-command-line:1.15.3'
    }
}
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Setup necessary repositories to get third party dependencies
///////////////////////////////////////////////////////////////////////////////
allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        gradlePluginPortal()

        maven { url 'https://maven.google.com' }
        maven { url 'https://mvnrepository.com' }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        maven { url 'https://plugins.gradle.org/m2/'}
        maven { url 'https://jitpack.io' }
    }
}
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

repositories {
    google()
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()

    maven { url 'https://maven.google.com' }
    maven { url 'https://mvnrepository.com' }
    maven { url 'https://dl.google.com/dl/android/maven2/' }
    maven { url 'https://plugins.gradle.org/m2/'}
    maven { url 'https://jitpack.io' }
}

/* Force Jacoco Agent version upgrade */
subprojects {
    configurations.configureEach {
        resolutionStrategy {
            eachDependency { details ->
                if ('org.jacoco' == details.requested.group) {
                    details.useVersion "${jacoco_version}"
                }
                // Necessary because 'androidx.core:core-ktx' also brings the 'org.jetbrains.kotlin:kotlin-stdlib'.
                if ('org.jetbrains.kotlin' == details.requested.group) {
                    details.useVersion "${kotlin_stdlib_jdk8_version}"
                }
            }
        }
    }
}
