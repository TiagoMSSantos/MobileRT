# Opt in using the repository setting "Build config validation"
version: ~> 1.0

# language: android, c, clojure, cpp, crystal, csharp, d, dart, elixir, elm,objective-c, ruby
language: cpp

# Git
git:
  submodules: false

# arch: amd64, arm64, arm64-graviton2, ppc64le, s390x
# os: linux, osx, windows

# dist: 20.04: focal | 18.04: bionic | 16.04: xenial | 14.04: trusty | 12.04: precise | server-2016

# compiler: gcc, clang

_shared_job_linux: &shared_job_linux
  before_install:
  - sudo apt-get update;
  - sudo apt-cache search libomp-dev;
  - sudo apt-cache search openmp;
  - sudo apt-cache search omp;
  - sudo apt-get install --no-install-recommends -y clang-8 || true;
  - sudo apt-get install --no-install-recommends -y libomp-8-dev || true;
  - sudo apt-get install --no-install-recommends -y libomp5-8 || true;
  - sudo apt-get install --no-install-recommends -y libomp-dev || true;
  - sudo apt-get install --no-install-recommends -y libiomp-dev || true;
  - sudo apt-get install --no-install-recommends -y qt5-default;
  - export CPLUS_INCLUDE_PATH=/usr/lib/gcc/s390x-linux-gnu/7/include:${CPLUS_INCLUDE_PATH};
  - export LIBRARY_PATH=/usr/local/Cellar/gcc/9.2.0_2/lib/gcc/9:${LIBRARY_PATH};
  - export LIBRARY_PATH=/usr/local/Cellar/libomp/11.0.0/lib:${LIBRARY_PATH};
  - export LIBRARY_PATH=/usr/lib/gcc/s390x-linux-gnu/7:${LIBRARY_PATH};
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH};
  - g++ -v || true;
  - clang++ -v || true;
  install:
  - mkdir -p build_native;
  - cd build_native;
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=debug ../app/;
  - cmake --build .;
  before_script:
  - ls -lahR;
  script:
  - ./bin/UnitTestsd;
  after_script:
  - ls -lahR;
  after_success:
  - ls -lahR;
  after_failure:
  - ls -lahR;

_shared_job_mac: &shared_job_mac
  before_install:
  - brew update > update.log;
  - brew tap cartr/qt4 > install_qt4.log;
  - brew uninstall --force openssl@1.0 > uninstall_openssl.log;
  - brew install libomp > install_libomp.log;
  - brew install openssl@1.0 > install_openssl.log;
  - brew install qt@4 > install_qt4.log;
  - brew install qt > install_qt.log;
  - brew install llvm > install_llvm.log;
#  - sudo find / -iname "omp.h" || true;
#  - sudo find / -iname "*omp.*" || true;
#  - sudo find / -iname "wchar.h" || true;
  - sudo xcode-select -p;
  - sudo xcode-select --install || true;
#  - sudo xcode-select --switch /System/Volumes/Data/Applications/Xcode-12.2.beta.3.app/Contents/Developer;
#  - sudo xcode-select --switch /Library/Developer/CommandLineTools;
#  - export CPLUS_INCLUDE_PATH=/System/Volumes/Data/Library/Developer/CommandLineTools/usr/include/c++/v1:${CPLUS_INCLUDE_PATH};
#  - export CPLUS_INCLUDE_PATH=/System/Volumes/Data/Applications/Xcode-12.2.beta.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include:${CPLUS_INCLUDE_PATH};
#  - export CPLUS_INCLUDE_PATH=/System/Volumes/Data/Applications/Xcode-12.2.beta.3.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1:${CPLUS_INCLUDE_PATH};
  - export LIBRARY_PATH=/usr/local/Cellar/libomp/11.0.0/lib:${LIBRARY_PATH};
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH};
  - softwareupdate --all --install --force;
  - g++ -v || true;
  - clang++ -v || true;
  install:
  - mkdir -p build_native;
  - cd build_native;
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=debug ../app/;
  - cmake --build .;
  before_script:
  - ls -lahR;
  script:
  - ./bin/UnitTestsd;
  after_script:
  - ls -lahR;
  after_success:
  - ls -lahR;
  after_failure:
  - ls -lahR;

jobs:
  include:

  - stage: Build
    os: linux
    dist: bionic
    arch: amd64
    compiler: gcc
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: amd64
    compiler: clang
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: arm64
    compiler: gcc
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: arm64
    compiler: clang
    env:
    - CXX=clang++-8
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: arm64-graviton2
    compiler: gcc
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: arm64-graviton2
    compiler: clang
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: ppc64le
    compiler: gcc
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: ppc64le
    compiler: clang
    env:
    - CXX=clang++-8
    <<: *shared_job_linux

  - stage: Build
    os: linux
    dist: bionic
    arch: s390x
    compiler: gcc
    <<: *shared_job_linux

# OpenMP binaries not included in the package managers: apt, conan
#  - stage: Build
#    os: linux
#    dist: bionic
#    arch: s390x
#    compiler: clang
#    env:
#    - CXX=clang++-8
#    <<: *shared_job_linux

# MacOS is now paid and it uses credits
# $15 will buy you 25 000 credits (1 minute of mac build time costs 50 credits)
#  - stage: Build
#    os: osx
#    osx_image: xcode9.4
#    arch: amd64
#    compiler: gcc
#    <<: *shared_job_mac
#
#  - stage: Build
#    os: osx
#    osx_image: xcode9.4
#    arch: amd64
#    compiler: clang
#    <<: *shared_job_mac
