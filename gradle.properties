# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects

# Provide more detailed information where the obsolete API is being used.
android.debug.obsoleteApi=true
# This enables an experimental Android Gradle Plugin feature to pull benchmark
# reports from devices running API 16 and higher.
android.enableAdditionalTestOutput=true
# The build cache speeds up the clean builds.
android.enableBuildCache=true
# The desugar step is executed normally after javac to optimize the bytecode.
# Enabling desugaring in D8 will remove that step entirely, and execute desugar
# as part of D8, making it faster and more optimized.
android.enableD8.desugaring=true
# Allows AGP to use Gradle workers.
android.enableGradleWorkers=true
# Automatically migrates existing third-party libraries to use AndroidX
# dependencies by rewriting their binaries.
android.enableJetifier=true
# Provide more aggressive code shrinking than the default behavior.
android.enableR8.fullMode=false
# Enable R8 for Android Library modules only.
android.enableR8.libraries=true
# Use the appropriate AndroidX library instead of a Support Library.
android.useAndroidX=true
# Show quick documentation when the mouse is over the element.
auto.show.quick.doc=true
# Reuse task outputs from any previous build, resulting is much faster builds.
org.gradle.caching=true
# Individual input property hashes and the build cache key for each task are
# logged on the console.
org.gradle.caching.debug=true
# Enable incubating configuration on demand, where Gradle will attempt to
# configure only necessary projects.
org.gradle.configureondemand=true
# Customize console output coloring or verbosity.
# Default depends on how Gradle is invoked.
org.gradle.console=verbose
# When set to true the Gradle Daemon is used to run the build. Default is true.
org.gradle.daemon=true
# Gradle Daemon will terminate itself after specified number of idle milliseconds.
# Default is 10800000 (3 hours).
org.gradle.daemon.idletimeout=10800000
# When set to true, Gradle will run the build with remote debugging enabled,
# listening on port 5005.
org.gradle.debug=false
# Specifies the JVM arguments used for the Gradle Daemon.
# The setting is particularly useful for configuring JVM memory settings for
# build performance.
# This does not affect the JVM settings for the Gradle client VM.
org.gradle.jvmargs=-Xmx2G -Xms2G -XX:+HeapDumpOnOutOfMemoryError \
  -Dfile.encoding=UTF-8 -XX:+PrintGCDetails \
  -XX:+PrintCommandLineFlags -Xcheck:jni \
  -XX:+PrintFlagsFinal -XX:+UseG1GC -XX:HeapDumpPath=. \
  -XX:OnError="jcmd %p GC.heap_dump /heap-dumps/%p.dump" \
  -XX:MaxGCPauseMillis=50
# Gradle will use this log level.
# The values are not case sensitive. The lifecycle level is the default.
org.gradle.logging.level=info
# When configured, Gradle will fork up to org.gradle.workers.max JVMs to execute
# projects in parallel.
org.gradle.parallel=true
# Specifies the scheduling priority for the Gradle daemon and all processes
# launched by it. Default is normal.
org.gradle.priority=normal
# When set to all, summary or none, Gradle will use different warning type
# display.
org.gradle.warning.mode=all
# When configured, Gradle will use a maximum of the given number of workers.
# Default is number of CPU processors.
org.gradle.workers.max=4
# The project tools window opens with Project view by default.
studio.projectview=false
