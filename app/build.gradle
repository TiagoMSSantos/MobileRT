import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

final def systemNDKVersion = System.getProperty('ndkVersion', '21.0.6113669')
final def systemCMakeVersion = System.getProperty('cmakeVersion', '3.6.0')
final def systemTestType = System.getProperty('testType', 'debug')

allprojects {
    tasks.withType(JavaCompile) {
        //  Additional arguments to be passed to the compiler.
        options.compilerArgs \
            << '-Xlint:all' \
            << '-AprintErrorStack' << '-AprintAllQualifiers' \
            << '-verbose'
    }
}

android {
    signingConfigs {
        Puscas {
            setStoreFile file('MobileRT.jks')
            setStorePassword '123456'
            setKeyPassword '123456'
            setKeyAlias 'Puscas'
        }
    }
    setCompileSdkVersion 29
    setBuildToolsVersion '29.0.3'
    setNdkVersion systemNDKVersion

    defaultConfig {
        setMinSdkVersion 16
        setTargetSdkVersion 29
        setTestInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        setTestInstrumentationRunnerArguments clearPackageData: 'true'
        setApplicationId 'puscas.mobilertapp'
        setVersionName '1.0'
        setVersionCode 1
        setMultiDexEnabled true
        setTestHandleProfiling false
        setTestFunctionalTest false
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            setModuleName 'MobileRT'
        }
        externalNativeBuild {
            cmake {
                arguments = [
                    '-DCMAKE_VERBOSE_MAKEFILE=ON',
                    '-DANDROID_TOOLCHAIN=clang',
                    '-DANDROID_STL=c++_static',
                    '-DANDROID_ARM_NEON=TRUE',
                    '-DANDROID_CPP_FEATURES=exceptions rtti',
                    '-DAPP_STL=c++_static',
                    '-DANDROID_STL_TYPE=c++_static',
                    '-DCMAKE_ANDROID_STL_TYPE=c++_static',
                    '-DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang',
                    '-DLIBCXX_FORCE_REBUILD=true',
                    '-DLOCAL_NDK_VERSION=c++_static',
                    '-DLOCAL_NDK_STL_VARIANT=c++_static',
                    '-DNDK_TOOLCHAIN_VERSION=clang',
                    '-D__COMPILER_GNU=0',
                    '-DCMAKE_CXX98_EXTENSION_COMPILE_OPTION=-std=c++98',
                    '-DCMAKE_CXX11_EXTENSION_COMPILE_OPTION=-std=c++11',
                    '-DCMAKE_CXX14_EXTENSION_COMPILE_OPTION=-std=c++14',
                    '-DCMAKE_CXX17_EXTENSION_COMPILE_OPTION=-std=c++17',
                ]
                if (!Os.isFamily(Os.FAMILY_WINDOWS)) {
                    cppFlags = [
                            '-flto=full'
                    ]
                }
            }
        }
    }
    externalNativeBuild {
        cmake {
            setPath 'CMakeLists.txt'
            setVersion systemCMakeVersion
        }
    }
    compileOptions {
        setDefaultJavaVersion JavaVersion.VERSION_1_8
        setTargetCompatibility JavaVersion.VERSION_1_8
        setSourceCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            setDebuggable true
            setJniDebuggable true
            setTestCoverageEnabled true
            setVersionNameSuffix 'd'
            setRenderscriptDebuggable true
            setRenderscriptOptimLevel 0
            setMinifyEnabled false
            setSigningConfig signingConfigs.Puscas
            setShrinkResources false
            ndk {
                setcFlags '-O0'
                if (!Os.isFamily(Os.FAMILY_WINDOWS)) {
                    setcFlags '-flto=full'
                }
            }
        }
        release {
            setDebuggable false
            setJniDebuggable false
            setTestCoverageEnabled false
            setVersionNameSuffix 'r'
            setRenderscriptDebuggable false
            setRenderscriptOptimLevel 3
            setMinifyEnabled false
            setSigningConfig signingConfigs.Puscas
            setShrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {
                setcFlags '-O3 -DNDEBUG -ffunction-sections -fdata-sections'
                if (!Os.isFamily(Os.FAMILY_WINDOWS)) {
                    setcFlags '-flto=full'
                }
            }
        }
    }
    productFlavors {
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/licenses/ASM'
        exclude '**/module-info.class'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        setAnimationsDisabled true
    }
    dexOptions {
        setJavaMaxHeapSize '1mb'
    }
    lintOptions {
        setAbortOnError true
        setCheckAllWarnings true
        setExplainIssues true
        setNoLines true
        setShowAll true
        setWarningsAsErrors true
    }
    setTestBuildType systemTestType
}

configurations {
    debug
    release
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'net.sourceforge.streamsupport:streamsupport:1.7.2'
    implementation 'org.jetbrains:annotations:19.0.0'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.commons:commons-text:1.8'

    // For the tests
    implementation 'junit:junit:4.13'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    implementation 'org.assertj:assertj-core:3.15.0'
    implementation 'org.mockito:mockito-android:3.3.3'
    implementation 'org.mockito:mockito-core:3.3.3'
    implementation 'com.google.truth:truth:1.0.1'

    implementation 'androidx.test:core:1.2.0'
    implementation 'androidx.test:runner:1.2.0'

    implementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    implementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    implementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    implementation 'androidx.test.espresso:espresso-intents:3.2.0'
    implementation 'androidx.test.espresso:espresso-web:3.2.0'
    implementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'
}
